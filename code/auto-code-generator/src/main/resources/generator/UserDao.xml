<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generator.UserDao">
  <resultMap id="BaseResultMap" type="generator.User">
    <id column="UUID" jdbcType="VARCHAR" property="uuid" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="password4Login" jdbcType="VARCHAR" property="password4login" />
    <result column="userlevel" jdbcType="INTEGER" property="userlevel" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UUID, account, nickName, password4Login, userlevel, createTime
  </sql>
  <select id="selectByExample" parameterType="generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="UUID" keyProperty="uuid" parameterType="generator.User" useGeneratedKeys="true">
    insert into user (account, nickName, password4Login, 
      userlevel, createTime)
    values (#{account,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{password4login,jdbcType=VARCHAR}, 
      #{userlevel,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="UUID" keyProperty="uuid" parameterType="generator.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="password4login != null">
        password4Login,
      </if>
      <if test="userlevel != null">
        userlevel,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password4login != null">
        #{password4login,jdbcType=VARCHAR},
      </if>
      <if test="userlevel != null">
        #{userlevel,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.uuid != null">
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password4login != null">
        password4Login = #{record.password4login,jdbcType=VARCHAR},
      </if>
      <if test="record.userlevel != null">
        userlevel = #{record.userlevel,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      nickName = #{record.nickname,jdbcType=VARCHAR},
      password4Login = #{record.password4login,jdbcType=VARCHAR},
      userlevel = #{record.userlevel,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="generator.User">
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password4login != null">
        password4Login = #{password4login,jdbcType=VARCHAR},
      </if>
      <if test="userlevel != null">
        userlevel = #{userlevel,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="generator.User">
    update user
    set account = #{account,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      password4Login = #{password4login,jdbcType=VARCHAR},
      userlevel = #{userlevel,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>